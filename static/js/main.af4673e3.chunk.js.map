{"version":3,"sources":["modules/CityComponent.js","modules/WeatherinfoComponent.js","App.js","index.js"],"names":["WeatherLogo","styled","img","ChooseCityLabel","span","SearchBox","form","CityComponent","props","updateCity","fetchWeather","src","onSubmit","placeholder","onChange","e","target","value","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","WeatherIcons","WeatherCondition","div","Condition","Location","WeatherInfoLabel","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","WeatherComponent","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","sys","country","Date","getHours","getMinutes","speed","Container","AppLabel","App","useState","city","updateWeather","a","preventDefault","axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af4673e3.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst WeatherLogo = styled.img`\r\nwidth: 140px;\r\nheight: 140px;\r\nmargin: 40px auto;\r\n`;\r\nconst ChooseCityLabel = styled.span`\r\ncolor: black;\r\nfont-size: 18px;\r\nfont-weight: bold;\r\nmargin : 10px auto;\r\n`;\r\nconst SearchBox = styled.form`\r\ndisplay: flex;\r\nflex-direction: row;\r\nborder: black solid 1px;\r\nborder-radius: 2px;\r\ncolor: black;\r\nfont-size: 18px;\r\nfont-weight: bold;\r\nmargin : 20px auto;\r\n& input {\r\n    padding: 10px;\r\n    font-size: 14px;\r\n    border: none;\r\n    outline: none;\r\n    font-weight:bold;\r\n}\r\n& button {\r\n    padding: 10px;\r\n    font-size: 14px;\r\n    color: white;\r\n    background-color: black;\r\n    border: none;\r\n    outline: none;\r\n    font-weight:bold;\r\n    cursor: pointer;\r\n}\r\n`;\r\nconst CityComponent = (props) => {\r\n    const { updateCity, fetchWeather } = props;\r\n\r\n    return (\r\n        <>\r\n            <WeatherLogo src=\"/weather-app/icon/perfect-day.svg\" />\r\n            <ChooseCityLabel>Find Weather of your city</ChooseCityLabel>\r\n            <SearchBox onSubmit={fetchWeather}>\r\n                <input placeholder=\"City\" onChange={(e) => updateCity(e.target.value)} />\r\n                <button type=\"submit\">Search</button>\r\n            </SearchBox>\r\n        </>\r\n    );\r\n};\r\nexport default CityComponent;","import styled from \"styled-components\";\r\n\r\nexport const WeatherInfoIcons = {\r\n    sunset: \"/weather-app/icon/temp.svg\",\r\n    sunrise: \"/weather-app/icon/temp.svg\",\r\n    humidity: \"/weather-app/icon/humidity.svg\",\r\n    wind: \"/weather-app/icon/wind.svg\",\r\n    pressure: \"/weather-app/icon/temp.svg\",\r\n};\r\n\r\nexport const WeatherIcons = {\r\n    \"01d\": \"/weather-app/icon/sunny.svg\",\r\n    \"01n\": \"/weather-app/icon/night.svg\",\r\n    \"02d\": \"/weather-app/icon/day.svg\",\r\n    \"02n\": \"/weather-app/icon/cloudy-night.svg\",\r\n    \"03d\": \"/weather-app/icon/cloudy.svg\",\r\n    \"03n\": \"/weather-app/icon/cloudy.svg\",\r\n    \"04d\": \"/weather-app/icon/perfect-day.svg\",\r\n    \"04n\": \"/weather-app/icon/cloud-night.svg\",\r\n    \"09d\": \"/weather-app/icon/rain.svg\",\r\n    \"09n\": \"/weather-app/icon/rain-night.svg\",\r\n    \"10d\": \"/weather-app/icon/rain.svg\",\r\n    \"10n\": \"/weather-app/icon/rain-night.svg\",\r\n    \"11d\": \"/weather-app/icon/storm.svg\",\r\n    \"11n\": \"/weather-app/icon/storm.svg\"\r\n}\r\n\r\nconst WeatherCondition = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\nwidth: 100%;\r\njustify-content: space-between;\r\nmargin: 30px auto;\r\n`;\r\nconst Condition = styled.span`\r\nmargin: 20px auto;\r\nfont-size: 14px;\r\n& span{\r\n    font-size:28px;\r\n}\r\n`;\r\nconst WeatherLogo = styled.img`\r\nwidth: 100px;\r\nheight: 100px;\r\nmargin: 5px auto;\r\n`;\r\nconst Location = styled.span`\r\nfont-size:28px;\r\nfont-weight: bold;\r\n`;\r\nconst WeatherInfoLabel = styled.span`\r\nfont-size: 14px;\r\nfont-weight: bold;\r\nmargin: 20px 25px 10px;\r\ntext-align:start;\r\nwidth: 90%; \r\n`;\r\nconst WeatherInfoContainer = styled.div`\r\ndisplay: flex;\r\nwidth: 90%;\r\nflex-direction-row;\r\njustify-content: space-evenly;\r\nalign-items: center;\r\nflex-wrap: wrap;\r\n`;\r\nconst InfoContainer = styled.div`\r\ndisplay: flex;\r\nmargin: 5px 10px;\r\nflex-direction : row;\r\njustify-content: space-evenly;\r\nalign-items: center;\r\n`;\r\n\r\nconst InfoIcon = styled.img`\r\nwidth: 36px;\r\nheight: 36px;\r\n`;\r\n\r\nconst InfoLabel = styled.span`\r\ndisplay: flex;\r\nflex-direction: column;\r\nfont-size: 14px;\r\nmargin: 15px;\r\n& span {\r\n    font-size: 12px;\r\n    text-transform: capitalize;\r\n}\r\n`;\r\nconst WeatherInfoComponent = (props) => {\r\n    const { name, value } = props;\r\n    return (\r\n        <InfoContainer>\r\n            <InfoIcon src={WeatherInfoIcons[name]} />\r\n            <InfoLabel>\r\n                {value}\r\n                <span>{name}</span>\r\n            </InfoLabel>\r\n        </InfoContainer>\r\n    )\r\n}\r\n\r\nconst WeatherComponent = (props) => {\r\n    const { weather } = props;\r\n    const isDay = weather?.weather[0].icon?.includes('d');\r\n    const getTime = (timeStamp) => {\r\n        return `${new Date(timeStamp * 1000).getHours()}:${new Date(timeStamp * 1000).getMinutes()}`\r\n    }\r\n    return (\r\n        <>\r\n            <WeatherCondition>\r\n                <Condition><span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>{` | ${weather?.weather[0].description}`}</Condition>\r\n                <WeatherLogo src={WeatherIcons[weather?.weather[0].icon]} />\r\n            </WeatherCondition>\r\n            <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\r\n            <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\r\n            <WeatherInfoContainer>\r\n                <WeatherInfoComponent name={isDay ? \"sunset\" : \"sunrise\"}\r\n                    value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}`} />\r\n                <WeatherInfoComponent name=\"humidity\" value={weather?.main?.humidity} />\r\n                <WeatherInfoComponent name=\"wind\" value={weather?.wind?.speed} />\r\n                <WeatherInfoComponent name=\"pressure\" value={weather?.main?.pressure} />\r\n            </WeatherInfoContainer>\r\n        </>\r\n    );\r\n};\r\nexport default WeatherComponent;","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport CityComponent from \"./modules/CityComponent\";\nimport WeatherComponent from \"./modules/WeatherinfoComponent\";\nconst API_KEY = \"872497a910fa59d0a1e67a567b324761\";\nconst Container = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin: auto;\nalign-items: center;\nbox-shadow: 0 3px 6px 0 #555;\npadding: 20px 10px;\nborder-radius: 4px;\nwidth: 380px;\nbackground: white;\nfont-family: Montserrat;\n`;\n\nconst AppLabel = styled.span`\ncolor: black;\nfont-size: 18px;\nfont-weight: bold;\n`;\n\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response =\n      await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n    updateWeather(response.data);\n  };\n  return (\n    <div>\n      <Container>\n        <AppLabel>The Weather App</AppLabel>\n        {weather ? (<WeatherComponent weather={weather} />)\n          : (<CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />)}\n      </Container>\n\n    </div >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}